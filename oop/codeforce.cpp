#include <iostream>
#include <string>
#include <vector>
#include <list>

int main()
{
    size_t	count;
    size_t lost;
    size_t nb_ships;
    size_t kraken;
    int tab_nb;
    std::list <int> tab;
    std::cin >> count;
    for (size_t i = 0; i < count; i++)
    {
        std::cin >> nb_ships >> kraken;
        for (int j = 0; j < nb_ships; j++)
        {
            std::cin >> tab_nb;
            tab.push_back(tab_nb);
        }
        lost = 0;
        while (!tab.empty() && kraken > 0)
        {
            --tab.front();
            if (tab.front() == 0)
            {
                tab.erase(tab.begin());
                ++lost;
            }
            kraken--;
            if (!tab.empty() && kraken > 0)
            {
                --tab.back();
                if (tab.back() == 0 && kraken > 0)
                {
                    tab.pop_back();
                    ++lost;
                }
                --kraken;
            }
        }
        tab.clear();
        std::cout << lost << std::endl;
    }
}


// 7371 4265 4858 3873 2914 7540 9607 7279 3808 2897 9188 7226 3948 9888 4876 2676 4398 8457 7730 3106 5296 2921 6448 7960 9549 9119 7564 8705 4774 3386 3462 6632 5470 7474 3332 5925 4614 5000 4565 2617 3915 7085 6201 6376 8828 6016 8370 4490 6924 3240 7210 2608 2808 6327 5233 4226 3717 9490 9684 9969 5077 7811 4024 7278 9749 4116 9087 2158 7116 7199 6063 8583 9552 6077 5743 3720 4922 9097 6205 2211 3943 4966 5451 9689 6246 2695 6169 7486 8291 5730 6002 6542 8152 4072 8626 4331 4330 7407 3229 5575 9497 5446 8892 4278 7753 8595 5043 6401 4968 8499 7110 3279 7766 7355 7976 9133 2257 9085 9981 7028 8045 5439 5438 6053 9825 8322 6109 3149 4428 2041 6247 6416 8775 3091 4719 4859 4468 5725 8819 4906 6473 7233 9601 3335 5362 9798 5877 2302 6830 9557 5565 9910 2906 5228 7876 8782 8144 9282 4456 7043 9959 6553 9032 2068 6996 2504 7014 4170 3848 7760 5633 6752 7937 7849 6463 2076 8453 6004 4132 2461 4432 4218 9741 9301 4850 9855 2293 5830 9485 4372 4222 4767 7835 5375 2360 2357 3979 9633 4543 5249 9403 9118 3126 8316 2949 2132 2353 8257 6160 9476 9711 9726 5216 7490 5555 2320 5766 2774 9559 4136 2569 8037 9808 2166 3478 8156 8525 4714 4366 4442 6753 7725 6017 7804 6702 8067 4828 7910 4100 6158 4370 9903 2777 8278 6117 4323 6462 3113 9909 2168 2757 4205 2791 8641 5891 3006 7949 6166 2276 2930 9058 8762 3439 8750 7627 7256 7276 3257 5547 7899 3589 6273 3535 7575 3282 3534 7400 9964 3571 9951 6955 7647 3642 8089 3570 9704 2526 6851 4522 9773 5793 7299 4153 7525 2025 9303 5422 4783 2229 2824 3918 4124 4697 4485 7385 7621 2020 6937 7694 7231 4049 6404 7643 2838 4285 7920 4025 7507 4375 2460 5668 7460 4528 5501 3972 2980 8717 4745 4583 6331 7885 2867 9509 9397 4833 7064 6920 8786 4183 9121 2623 9834 5758 9966 5227 4066 4215 9479 4854 3937 9706 7959 8099 6449 5389 4975 2212 9187 9491 4471 6254 6384 3387 7332 9714 7787 7010 7955 2807 8130 5317 7780 6960 3916 5209 5774 4521 8273 5159 2030 8243 4704 7858 2391 3690 2494 6823 9920 3244 3933 8081 3286 5586 7219 8761 4388 7448 3476 9025 6673 3290 8693 7318 5887 4852 4652 3450 6818 8462 4283 6832 2822 5371 6926 4865 6012 6505 3168 2361 8571 6888 7459 3356 9642 9738 9740 4872 5552 6144 7685 4300 6370 2152 9375 5615 2427 6809 6751 6674 7042 7174 4566 6343 3790 5537 4474 9154 5130 9755 9572 5775 2984 5122 6885 3313 2610 2594 9246 5119 7339 3107 4926 5285 5957 9138 7494 7928 7616 6956 7778 7628 6467 9189 8985 7969 7384 3457 7142 3025 2728 2900 5947 2153 5	523 5732 8871 7440 2238 6413 5222 8206 2868 9117 6304 5368 5630 3155 3183 7762 3283